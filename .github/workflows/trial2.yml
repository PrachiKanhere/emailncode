
on: push

jobs:
  job1:
    runs-on: windows-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test}}
      output2: ${{ steps.step2.outputs.test}}
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.2  
        
      - name: inputfile Jar execution 
        id: step1
        run: |
          #$abc = "Following Buses might be down: [intjmsbus,jmsbus, ysbus]"
          #$abc= "has exceeded threshold limit for messages. Please take action!"
          $abc = "The Excel sheet was not created"
          echo "::set-output name=test::$abc"
          
      - name : take file
        run: | 
          echo "${{steps.step1.outputs.test}}" > abc1.txt
         
      - name: setup Python
        uses: actions/setup-python@v3    
          
      - name: taking build result
        id: step2
        run: |
          $build_result = python .github/workflows/regex_check.py
          echo "::set-output name=build_Result::$build_result"
          
      - name: Print op
        run: |
          echo "${{steps.step2.outputs.build_Result}}"
          
     
  Groovy-Script:
    runs-on: windows-latest
    needs: job1
    steps:
      - name: checkout
        uses: actions/checkout@v2.4.2
     
      - name : take file
        run: | 
          echo "${{needs.job1.outputs.output1}}"
          echo "${{needs.job1.outputs.output1}}" > abc1.txt
           
      - name: setup Python
        uses: actions/setup-python@v3
        
      - name: install dependencies
        run : python -m pip install pytz
        
      - name: run py script
        run: |
          $output = python .github/workflows/Timestamp.py
          echo "::set-output name=TIMESTAMP::$output"
        id: step1
        
           
      - name: run py script
        run: |
          $output = python .github/workflows/date.py
          echo "::set-output name=formatteddate::$output"
        id: step2
      
        
        
      - name: run py script
        run: |
          $output = python .github/workflows/down_bus_check.py
          echo "::set-output name=DOWN_BUS::$output"
        id: step3
      
          
      - name: Print op
        run: |
          echo "${{steps.step1.outputs.TIMESTAMP}}"
          echo "${{steps.step2.outputs.formatteddate}}"
          echo "${{steps.step3.outputs.DOWN_BUS}}"
          
          
  email-part:
    runs-on: windows-latest
    needs: [job1, Groovy-Script]
    steps:
    - name: checkout
      uses: actions/checkout@v2.4.2
      
    - name : take file
      run: | 
        echo "${{needs.job1.outputs.output1}}"
        echo "${{needs.job1.outputs.output1}}" > abc1.txt
           
    - name: setup Python
      uses: actions/setup-python@v3
        
    - name: install dependencies
      run : python -m pip install pytz
      
    - name: get hour
      run: |
        $output = python .github/workflows/hour.py
        echo "::set-output name=Hour::$output"
      id: step1
          
    - name: Print op
      run: |
        echo "${{steps.step1.outputs.Hour}}"

    - name: get minute
      run: |
        $minute = python .github/workflows/minute.py
        echo "::set-output name=Minute::$output"
      id: step2
          
    - name: Print op
      run: |
        echo "${{steps.step2.outputs.Minute}}"
          
    - name: it has exceeded threshold limit for msg plz take action send mail
      run: |
        $output = python .github/workflows/fail2.py
        echo "::set-output name=Fail2::$output"
      id: step3
   
    - name: Print op
      run: |
        echo "${{steps.step3.outputs.Fail2}}"
        
    - name: mail case1
      if: ${{needs.job1.outputs.output2 =='SUCCESS'}}
      run: |
        echo "send mail success case1"
        
    - name: mail case2
      if: ${{ needs.job1.outputs.output2 =='FAILURE'}}
      run: |
        echo "send mail failure case2"
      
    - name: mail case3
      if: ${{(steps.step1.outputs.Hour < '21') && (steps.step1.outputs.Hour >= '01') && ((needs.job1.outputs.output2 =='SUCCESS') ||
           (needs.job1.outputs.output2 =='FIXED') || (needs.job1.outputs.output2 =='UNSTABLE')) &&
           (steps.step3.outputs.Fail2 == 'has exceeded threshold limit for messages. Please take action!')}}
      run: |
        echo "send mail case3"
          
    - name: mail case4 GET MINUTE HERE
      if: ${{(steps.step1.outputs.Hour == '07') && (steps.step2.outputs.Minute >= '00'&& steps.step2.outputs.Minute <= '09') && ((needs.job1.outputs.output2 =='SUCCESS') ||
           (needs.job1.outputs.output2 =='FIXED') || (needs.job1.outputs.output2 =='UNSTABLE')) &&
           (steps.step3.outputs.Fail2 == 'has exceeded threshold limit for messages. Please take action!')}}
      run: |
        echo "send mail case4"

    - name: mail case5
      if: ${{(needs.job1.outputs.output2 =='FAILURE') && (steps.step3.outputs.Fail2 == 'There might be problem with WAS servers')}}
      run: |
        echo "send mail WAS case5"
       
    - name: mail case6
      if: ${{(needs.job1.outputs.output2 =='FAILURE') || (needs.job1.outputs.output2 =='UNSTABLE')) &&
           (steps.step3.outputs.Fail2 == 'Issue Has Occurred for Allowed Retrial Times')}}
      run: |
        echo "send mail retrial case6"
        
    - name: mail case7
      if: ${{(steps.step1.outputs.Hour < '21') && (steps.step1.outputs.Hour >= '01') && ((needs.job1.outputs.output2 =='SUCCESS') ||
           (needs.job1.outputs.output2 =='FIXED') || (needs.job1.outputs.output2 =='UNSTABLE')) &&
           (steps.step3.outputs.Fail2 == 'Following Queues are not reducing')}}
      run: |
        echo "send mail Queues are not reducing case7"
        
    - name: mail case8
      if: ${{(needs.job1.outputs.output2 =='FAILURE') || (needs.job1.outputs.output2 =='UNSTABLE')) &&
           (steps.step3.outputs.Fail2 == 'Following Buses might be down')}}
      run: |
        echo "send mail Following Buses might be down case8"
        
    - name: mail case9
      if: ${{(needs.job1.outputs.output2 =='FAILURE') && (steps.step3.outputs.Fail2 == 'There might be problem with WAS servers')}}
      run: |
        echo "send mail There might be problem with WAS servers. case9"
       
          
  
